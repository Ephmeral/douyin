syntax = "proto3";
package message;
option go_package = "message";

message BaseResp {
  int32 status_code = 1;//状态码
  string status_message = 2;//状态描述
  int64 service_time = 3;//服务时间
}

message User {
  int64 id = 1;//用户id
  string name = 2;//用户名称
  int64 follow_count = 3;//关注总数
  int64 follower_count = 4;//粉丝总数
  bool is_follow = 5;//true-已关注，false-未关注
  string avatar = 6; // 用户头像
  string background_image = 7; // 用户个人页顶部大图
  string signature = 8; // 个人简介
  int64 total_favorited = 9; // 获赞数量
  int64 work_count = 10; // 作品数量
  int64 favorite_count = 11; // 点赞数量
}

message Message {
  int64 id = 1; // 消息id
  int64 to_user_id = 2; // 该消息接收者的id
  int64 from_user_id =3; // 该消息发送者的id
  string content = 4; // 消息内容
  int64 create_time = 5; // 消息创建时间
}

message message_chat_request {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int64 pre_msg_time = 3; // 上次最新消息的时间
}

message message_chat_response {
  BaseResp base_resp = 1;
  repeated Message message_list = 2; // 消息列
}

message message_action_request {
  string token = 1; // 用户鉴权 token
  int64 to_user_id = 2; // 对方用户 id
  int32 action_type = 3; // 1- 发送消息
  string content = 4; // 消息内容
}

message message_action_response {
  BaseResp base_resp = 1;
}

service MessageService {
  rpc MessageAction (message_action_request) returns (message_action_response) {}
  rpc MessageChat (message_chat_request) returns (message_chat_response) {}
}